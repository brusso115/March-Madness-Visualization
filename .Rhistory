FGM=c(df2[,c('WFGM')], df2[,c('LFGM')]),
FGA=c(df2[,c('WFGA')], df2[,c('LFGA')]),
FGM3=c(df2[,c('WFGM3')], df2[,c('LFGM3')]),
FGA3=c(df2[,c('WFGA3')], df2[,c('LFGA3')]),
FTM=c(df2[,c('WFTM')], df2[,c('LFTM')]),
FTA=c(df2[,c('WFTA')], df2[,c('LFTA')]),
OR=c(df2[,c('WOR')], df2[,c('LOR')]),
DR=c(df2[,c('WDR')], df2[,c('LDR')]),
Ast=c(df2[,c('WAst')], df2[,c('LAst')]),
TO=c(df2[,c('WTO')], df2[,c('LTO')]),
Stl=c(df2[,c('WStl')], df2[,c('LStl')]),
Blk=c(df2[,c('WBlk')], df2[,c('LBlk')]),
PF=c(df2[,c('WPF')], df2[,c('LPF')]))
df2 = df2 %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df2)/2,'W','L'))
df2
rm(list = ls())
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
relativePath = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021/'
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
df
rm(list = ls())
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
relativePath = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021/'
path_out = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021/UserGeneratedDataFiles'
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
df
fileName = paste(path_out, 'my_file.csv',sep = '')
write.csv(dt,fileName)
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
df
fileName = paste(path_out, 'MNCAATourneyDetailedResults_Reshaped.csv',sep = '')
write.csv(df,fileName)
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
df
fileName = paste(path_out, 'MNCAATourneyDetailedResults_Reshaped.csv',sep = '')
write.csv(df,fileName)
rm(list = ls())
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
relativePath = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021/'
path_out = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021//UserGeneratedDataFiles/'
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
df
fileName = paste(path_out, 'MNCAATourneyDetailedResults_Reshaped.csv',sep = '')
write.csv(df,fileName)
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
tourneyTeamsSeasonData$WinPercentage']
tourneyTeamsSeasonData$WinPercentage
tourneyTeamsSeasonData
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
rm(list = ls())
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
relativePath = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021/'
path_out = '/Users/baileyrusso/Desktop/NYC Data Science Academy/Project_1/ncaam-march-mania-2021//UserGeneratedDataFiles/'
df <- read.csv(paste0(relativePath,'MDataFiles_Stage1/MNCAATourneyDetailedResults.csv'))
df = data.frame(TeamID = c(df[,c('WTeamID')], df[,c('LTeamID')]),
TeamScore= c(df[,c('WScore')], df[,c('LScore')]),
FGM=c(df[,c('WFGM')], df[,c('LFGM')]),
FGA=c(df[,c('WFGA')], df[,c('LFGA')]),
FGM3=c(df[,c('WFGM3')], df[,c('LFGM3')]),
FGA3=c(df[,c('WFGA3')], df[,c('LFGA3')]),
FTM=c(df[,c('WFTM')], df[,c('LFTM')]),
FTA=c(df[,c('WFTA')], df[,c('LFTA')]),
OR=c(df[,c('WOR')], df[,c('LOR')]),
DR=c(df[,c('WDR')], df[,c('LDR')]),
Ast=c(df[,c('WAst')], df[,c('LAst')]),
TO=c(df[,c('WTO')], df[,c('LTO')]),
Stl=c(df[,c('WStl')], df[,c('LStl')]),
Blk=c(df[,c('WBlk')], df[,c('LBlk')]),
PF=c(df[,c('WPF')], df[,c('LPF')]))
df = df %>% mutate(.,Outcome=ifelse(row_number() <= nrow(df)/2,'W','L'))
fileName = paste(path_out, 'MNCAATourneyDetailedResults_Reshaped.csv',sep = '')
write.csv(df,fileName)
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
print(w)
print(flatten(w))
tourneyTeamsSeasonData
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
print(flatten(w))
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
x = flatten(w)
x
tourneyTeamsSeasonData$WinPercentage = flatten(w[0])
tourneyTeamsSeasonData
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
w[0]
w[[0]]
w[[1]]
w[[2]]
w[[[1]]]
w[[1]]
w[]
w
w[]
tourneyTeamsSeasonData
w = flatten(w)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
tourneyTeamsSeasonData$WinPercentage = flatten(w[0])
tourneyTeamsSeasonData
tourneyTeamsSeasonData$WinPercentage = flatten(w)
tourneyTeamsSeasonData
print(w)
tourneyTeamsSeasonData %>% mutate(.,map=map2(w))
tourneyTeamsSeasonData %>% mutate(.,map=w[[1]])
tourneyTeamsSeasonData %>% mutate(.,map=WinPercentage[[1]])
tourneyTeamsSeasonData %>% mutate(.,map=WinPercentage[[0]])
tourneyTeamsSeasonData %>% mutate(.,map=WinPercentage[[1]])
tourneyTeamsSeasonData
tourneyTeamsSeasonData %.% mutate(.,map=map2(MSFE_mine))
tourneyTeamsSeasonData %>% mutate(.,map=map2(MSFE_mine))
tourneyTeamsSeasonData %>% mutate(.,map=as.numeric(w))
tourneyTeamsSeasonData %>% mutate(.,WinPercentage=as.numeric(w))
tourneyTeamsSeasonData %>% mutate(.,WinPercentage=as.numeric(w)) %>% filter(.,TeamName=='Wisconsin)
tourneyTeamsSeasonData %>% mutate(.,WinPercentage=as.numeric(w)) %>% filter(.,TeamName=='Wisconsin')
tourneyTeamsSeasonData %>% mutate(.,WinPercentage=as.numeric(w)) %>% filter(.,TeamName=='Wisconsin')
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = flatten(w)
#tourneyTeamsSeasonData %>% mutate(.,WinPercentage=as.numeric(w))
tourneyTeamsSeasonData
tourneyTeamsSeasonData$WinPercentage = flatten(as.numeric(w))
tourneyTeamsSeasonData
tourneyTeamsSeasonData$WinPercentage = as.numeric(flatten(w))
tourneyTeamsSeasonData
tourneyTeamsSeasonData %>% filter(.,TeamName=='Wisconsin')
tourneyTeamsSeasonData
currSeasonData <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MRegularSeasonDetailedResults.csv'))
currSeasonTourneyTeams <-read.csv(paste0(relativePath,'MDataFiles_Stage2/MNCAATourneySeeds.csv'))
teamNames <- read.csv(paste0(relativePath,'MDataFiles_Stage2/MTeams.csv'))
currSeasonTourneyTeams = currSeasonTourneyTeams %>% filter(.,Season=='2021')
currSeasonData = currSeasonData %>% filter(.,Season=='2021')
tourneyTeams = inner_join(teamNames, currSeasonTourneyTeams, by="TeamID") %>% select(.,TeamID,TeamName,Seed)
#currSeasonData
currSeasonData_Reshaped = data.frame(TeamID = c(currSeasonData[,c('WTeamID')],   currSeasonData[,c('LTeamID')]), Season = c(currSeasonData[,c('Season')], currSeasonData[,c('Season')]), DayNum = c(currSeasonData[,c('DayNum')], currSeasonData[,c('DayNum')]), TeamScore= c(currSeasonData[,c('WScore')], currSeasonData[,c('LScore')]), FGM=c(currSeasonData[,c('WFGM')], currSeasonData[,c('LFGM')]),
FGA=c(currSeasonData[,c('WFGA')], currSeasonData[,c('LFGA')]), FGM3=c(currSeasonData[,c('WFGM3')], currSeasonData[,c('LFGM3')]),
FGA3=c(currSeasonData[,c('WFGA3')], currSeasonData[,c('LFGA3')]),
FTM=c(currSeasonData[,c('WFTM')], currSeasonData[,c('LFTM')]),
FTA=c(currSeasonData[,c('WFTA')], currSeasonData[,c('LFTA')]),
OR=c(currSeasonData[,c('WOR')], currSeasonData[,c('LOR')]),
DR=c(currSeasonData[,c('WDR')], currSeasonData[,c('LDR')]),
Ast=c(currSeasonData[,c('WAst')], currSeasonData[,c('LAst')]),
TO=c(currSeasonData[,c('WTO')], currSeasonData[,c('LTO')]),
Stl=c(currSeasonData[,c('WStl')], currSeasonData[,c('LStl')]),
Blk=c(currSeasonData[,c('WBlk')], currSeasonData[,c('LBlk')]),
PF=c(currSeasonData[,c('WPF')], currSeasonData[,c('LPF')]))
currSeasonData_Reshaped = currSeasonData_Reshaped %>% mutate(.,Outcome=ifelse(row_number() <= nrow(currSeasonData_Reshaped)/2,'W','L'))
tourneyTeamsSeasonData = inner_join(tourneyTeams, currSeasonData_Reshaped,by="TeamID") %>% arrange(.,TeamID, DayNum)
#tourneyTeamsSeasonData
calc <- function(x) {
data <- x
curr_wins = 0
curr_losses = 0
win_percentage = list()
for (row in 1:nrow(data)) {
if (data[row,"Outcome"] == 'W') {
curr_wins = curr_wins + 1
} else {
curr_losses = curr_losses + 1
}
win_percentage = append(win_percentage,curr_wins/(curr_wins+curr_losses))
}
data$WinPercentage = win_percentage
}
flatten <- function(lst) {
do.call(c, lapply(lst, function(x) if(is.list(x)) flatten(x) else list(x)))
}
w = lapply(split(tourneyTeamsSeasonData,tourneyTeamsSeasonData$TeamID), calc)
tourneyTeamsSeasonData$WinPercentage = as.numeric(flatten(w))
tourneyTeamsSeasonData
fileName = paste(path_out, 'TourneyTeamsSeasonData.csv',sep = '')
write.csv(tourneyTeamsSeasonData,fileName)
